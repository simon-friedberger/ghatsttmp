name: Comment on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Check Incoming PR"]
    types:
      - completed

jobs:
  # this doesn't work it needs explicit setting of the PR number
  labeler:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: "Download check result"
        uses: actions/download-artifact@v4

      - run: ls -lahR

      # - name: 'Comment on PR'
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       var fs = require('fs');
      #       var issue_number = Number(fs.readFileSync('./NR'));
      #       await github.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: issue_number,
      #         body: 'Everything is OK. Thank you for the PR!'
      #       });
      # permissions:
      #   contents: read
      #   pull-requests: write
      # runs-on: ubuntu-latest
      # steps:
      # - uses: actions/labeler@v5
#   upload:
#     runs-on: ubuntu-latest
#     steps:
#         - name: 'Set label'

# if: >
#   github.event.workflow_run.event == 'pull_request' &&
#   github.event.workflow_run.conclusion == 'success'
# steps:
#   - name: 'Download artifact'
#     uses: actions/github-script@v3.1.0
#     with:
#       script: |
#         var artifacts = await github.actions.listWorkflowRunArtifacts({
#            owner: context.repo.owner,
#            repo: context.repo.repo,
#            run_id: ${{github.event.workflow_run.id }},
#         });
#         var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
#           return artifact.name == "pr"
#         })[0];
#         var download = await github.actions.downloadArtifact({
#            owner: context.repo.owner,
#            repo: context.repo.repo,
#            artifact_id: matchArtifact.id,
#            archive_format: 'zip',
#         });
#         var fs = require('fs');
#         fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
#   - run: unzip pr.zip

#   - name: 'Comment on PR'
#     uses: actions/github-script@v3
#     with:
#       github-token: ${{ secrets.GITHUB_TOKEN }}
#       script: |
#         var fs = require('fs');
#         var issue_number = Number(fs.readFileSync('./NR'));
#         await github.issues.createComment({
#           owner: context.repo.owner,
#           repo: context.repo.repo,
#           issue_number: issue_number,
#           body: 'Everything is OK. Thank you for the PR!'
#         });
